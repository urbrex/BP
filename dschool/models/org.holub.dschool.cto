/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Write your model definitions here
 */

namespace org.holub.dschool

abstract participant Person identified by email {
  o String email
  o String name
  o String surname
  o Address address optional
}

concept Address {
  o String city optional
  o String street optional
  o String zip optional
}

concept Gps {
  o String hei
  o String lat
  o String lon
}

participant Student extends Person {
  o DateTime dateOfBirth
  o Double phone
  o String idCard optional
}

participant Instructor extends Person {
  o DateTime dateOfBirth
  o Double phone
  o String idCard optional
}

participant Police extends Person {
}

enum CourseStatus {
  o CREATED
  o ACTIVE
  o FINISHED
}

enum CourseType {
  o A1
  o A2
  o A
  o B
  o C
  o D
  o E
  o T
}

asset DSCourse identified by Coursekey {
  o String Coursekey
  o CourseStatus status
  o DateTime started optional
  o CourseType type
  --> Instructor instructor
  o DSStudentCourse[] studentCourses optional
  o DSTheoryLesson[] theoryLessons optional
}

concept DSStudentCourse {
  --> Student student 
  o DSCourseEvaluation[] evaluations optional
  o DSDriveLesson[] driveLessons optional
  o Double paid
  o Boolean feeStamp
}

concept DSTheoryLesson {
  o DateTime date
  o DateTime started
  o Double duration
  o Address locationAddresd
  o String locationInfo
  o Boolean mandatory
  o DSAttendance[] attendance optional
}

concept DSDriveLesson {
  --> Instructor instructor
  o DateTime date
  o Gps[] gpsInfo optional
}

transaction DSCourseEvaluation {
  o DateTime dateOfTest
  o String testResult
  o String parkingResult
  o String driveResult
  o String detail
  --> Police testAdministrator
}

transaction DSAttendance {
  --> Student student
  o DateTime arrival
  o DateTime departure optional
}

asset Course identified by Coursekey {
  o String Coursekey
  o CourseStatus status
  o DateTime started optional
  o DateTime finished optional
  o CourseType type
  --> Instructor instructor
}

asset StudentCourse identified by CourseKey {
  o String CourseKey
  --> Course course 
  --> Student student 
  o CourseEvaluation[] evaluations optional
  o Double paid
  o Boolean feeStamp
}

asset TheoryLesson identified by TheoryKey {
  --> Course course 
  o String TheoryKey
  o Attendance[] attendance optional
  o DateTime date
  o DateTime started optional
  o Double duration
  o Address locationAddresd
  o String locationInfo optional
  o Boolean mandatory
}

asset DriveLesson identified by id {
  o String id
  --> Instructor instructor
  --> StudentCourse studentCourse
  o DateTime date
  o Gps[] gpsInfo optional
}

transaction CourseEvaluation {
  o DateTime dateOfTest
  o String testResult
  o String parkingResult
  o String driveResult
  o String detail
  --> StudentCourse studentCourse
  --> Police testAdministrator
}

transaction Attendance {
  --> Student student
  --> TheoryLesson theory
  o DateTime arrival
  o DateTime departure optional
}

transaction SetupDrivingSchool {
}

transaction SetupAndTest {
}
transaction DSSetupAndTest {
}

transaction DumpTheEvidence{
}
transaction DumpTheEvidenceOfSecondModel{
}

transaction TestQuerySpeedInModels{
  o String id
  o String scenario
}